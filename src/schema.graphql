# import User, Scope, AccessLevel from "./generated/prisma.graphql"

#
# Directives
#
directive @auth(
  permissions: [String!],
) on OBJECT | FIELD_DEFINITION

#
# Scalars
#
scalar UUID
scalar JSON
scalar Date

#
# Queries
#
type Query {
  users(
    userUuid: UUID,
    username: String,
    email: String
  ): [User] @auth
}

#
# Mutations
#
type Mutation {
  createUser(
    email: String!
    password: String!
    username: String
    profile: JSON
    inviteToken: String
    duration: Int
  ): AuthUser

  createToken(
    password: String!
    identity: String!
    duration: Int
  ): AuthUser
}

type AuthUser {
  user: User
  token: Token
  permissions: JSON
  isAdmin: Boolean
}

type Token {
  value: String
  payload: TokenPayload
}

type TokenPayload {
  uuid: UUID
  iat: Int
  exp: Int
}
