enum Role {
  SYSTEM_ADMIN
  SYSTEM_EDITOR
  SYSTEM_VIEWER
  WORKSPACE_ADMIN
  WORKSPACE_EDITOR
  WORKSPACE_VIEWER
  DEPLOYMENT_ADMIN
  DEPLOYMENT_EDITOR
  DEPLOYMENT_VIEWER
}

type User {
  id: ID! @unique
  username: String @unique
  status: String
  fullName: String
  avatarUrl: String
  emails: [Email!]!
  roleBindings: [RoleBinding!]! @relation(name: "RoleBindingToUser", onDelete: CASCADE)
  localCredential: LocalCredential
  oauthCredentials: [OAuthCredential!]! @relation(name: "OAuthCredentialToUser", onDelete: CASCADE)
  createdAt: DateTime!
  updatedAt: DateTime!
}

# Ideally this type uses a union type once prisma supports it.
# subject: User | ServiceAccount
# principal: Workspace | Deployment
# https://github.com/prisma/prisma/issues/165
type RoleBinding {
  id: ID! @unique
  role: Role
  user: User @relation(name: "RoleBindingToUser")
  serviceAccount: ServiceAccount @relation(name: "RoleBindingToServiceAccount")
  workspace: Workspace @relation(name: "RoleBindingToWorkspace")
  deployment: Deployment @relation(name: "DeploymentRoleBindings")
}

type Email {
  id: ID! @unique
  address: String @unique
  primary: Boolean
  token: String @unique
  user: User
  verified: Boolean
}

type LocalCredential {
  id: ID! @unique
  user: User
  password: String
  resetToken: String @unique
}

type OAuthCredential {
  id: ID! @unique
  expiresAt: DateTime
  oauthProvider: String!
  oauthUserId: String!
  user: User @relation(name: "OAuthCredentialToUser", onDelete: CASCADE)
}

type InviteToken {
  # Multi-column unique fields would be nice, but not supported yet
  # https://github.com/prisma/prisma/issues/3405
  id: ID! @unique
  email: String!
  token: String! @unique
  workspace: Workspace!

  # This should be required but Prisma won't set default values when creating the column so this will fail.
  # https://github.com/prisma/prisma/issues/3408 adds `@default` that should help us.
  role: Role

  createdAt: DateTime!
  updatedAt: DateTime!
}

type ServiceAccount {
  id: ID! @unique
  apiKey: String @unique
  label: String
  category: String
  active: Boolean
  roleBinding: RoleBinding @relation(name: "RoleBindingToServiceAccount", onDelete: CASCADE)
  lastUsedAt: DateTime
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Workspace {
  id: ID! @unique
  active: Boolean
  deployments: [Deployment!]!
  description: String
  invites: [InviteToken!]!
  label: String
  roleBindings: [RoleBinding!]!  @relation(name: "RoleBindingToWorkspace", onDelete: CASCADE)
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Deployment {
  id: ID! @unique
  config: Json
  description: String
  label: String
  registryPassword: String
  elasticsearchPassword: String
  releaseName: String @unique
  version: String
  extraAu: Int
  airflowVersion: String
  alertEmails: [String!]
  roleBindings: [RoleBinding!]! @relation(name: "DeploymentRoleBindings", onDelete: CASCADE)
  workspace: Workspace
  createdAt: DateTime!
  updatedAt: DateTime!
}
