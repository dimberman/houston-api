enum Role {
  USER
  WORKSPACE_ADMIN
  WORKSPACE_EDITOR
  WORKSPACE_VIEWER
  DEPLOYMENT_ADMIN
  DEPLOYMENT_EDITOR
  DEPLOYMENT_VIEWER
  SYSTEM_ADMIN
  SYSTEM_EDITOR
  SYSTEM_VIEWER
}

type User {
  id: UUID! @unique
  username: String @unique
  emails: [Email!]!
  fullName: String
  status: String
  inviteTokens: [InviteToken!]!
  localCredential: LocalCredential
  roleBindings: [RoleBinding!]!
  createdAt: DateTime!
  updatedAt: DateTime!
  # workspaces: [Workspace!]!
  # groups: [Group!]!
  # oauthCredentials: [OauthCredential!]!
  # sessionRefreshTokens: [SessionRefreshToken!]!
  profile: [UserProperty!]!
}

type UserProperty {
  id: UUID! @unique
  category: String
  key: String!
  value: String
  user: User
}

type RoleBinding {
  id: UUID! @unique
  subject: User
  role: Role
  workspace: Workspace
  deployment: Deployment
}

type Email {
  id: UUID! @unique
  address: String @unique
  primary: Boolean
  token: String @unique
  user: User
  verified: Boolean
}

type LocalCredential {
  id: UUID! @unique
  user: User
  password: String @unique
  resetToken: String
}

type InviteToken {
  id: UUID! @unique
  assignments: String
  email: String
  token: String
  user: User
  workspace: Workspace
}

# type OauthCredential {
#   id: UUID! @unique
#   expiresAt: DateTime
#   oauthProvider: String!
#   oauthUserId: String!
#   user: User
# }

# type SessionRefreshToken {
#   id: UUID! @unique
#   expiresAt: DateTime
#   active: Boolean
#   metadata: String
#   refreshToken: String @unique
#   refreshedAt: DateTime
#   source: String
#   user: User
# }

# type UserGroup {
#   id: UUID! @unique
#   group: Group
#   user: User
# }

# type Group {
#   id: UUID! @unique
#   name: String! # New static name to remove need to dynamically set ids in system settings
#   active: Boolean
#   custom: Boolean
#   description: String
#   entityType: String # System, Workspace, Deployment
#   entityId: UUID
#   properties: [GroupProperty!]!
#   label: String
#   users: [User!]!
#   roles: [Role!]!
# }

# type GroupProperty {
#   id: UUID! @unique
#   category: String
#   group: Group
#   key: String!
#   value: String
# }

# # type GroupRole {
# #   group: Group
# #   role: Role
# # }

# type Role {
#   id: UUID! @unique
#   name: String!
#   # category: String
#   # entityType: String # Group / ServiceAccount
#   # entityId: UUID
#   label: String!
#   # scope: String
#   permissions: [Permission!]!
#   # groups: [Group!]!
#   # serviceAccounts: [ServiceAccount!]!
# }

# # type RolePermission {
# #   permission: Permission
# #   role: Role
# # }

# type Permission {
#   id: UUID! @unique
#   name: String! @unique # This used to be id
#   # category: String
#   # label: String
#   # scope: String!
#   roles: [Role!]!
#   # rolePermissions: [RolePermission!]!
# }

# # type ServiceAccountRole {
# #   role: Role
# #   serviceAccount: ServiceAccount
# # }

# type ServiceAccount {
#   id: UUID! @unique
#   active: Boolean
#   api_key: String
#   category: String
#   entity_type: String
#   entity_uuid: UUID
#   label: String
#   lastUsedAt: DateTime
#   roles: [Role!]!
#   # serviceAccountRoles: [ServiceAccountRole!]!
# }

# type UserWorkspace @pgTable(name: "user_workspace_map") {
#   user: User @pgRelation(column: "user_uuid")
#   workspace: Workspace @pgRelation(column: "workspace_uuid")
#   createdAt: DateTime! @pgColumn(name: "created_at")
#   updatedAt: DateTime! @pgColumn(name: "updated_at")
# }

type Workspace {
  id: UUID! @unique
  active: Boolean
  # deployments: [Deployment!]!
  description: String
  inviteTokens: [InviteToken!]!
  label: String
  properties: [WorkspaceProperty!]!
  users: [User!]!
}

type WorkspaceProperty {
  id: UUID! @unique
  category: String
  key: String!
  value: String
  workspace: Workspace
}

type Deployment {
  id: UUID! @unique
  config: String
#   deployment_properties: [DeploymentProperty!]!
#   description: String
#   label: String @unique
#   registry_password: String
#   release_name: String @unique
#   status: String
#   type: String
#   version: String
#   workspace: Workspace
}

# type DeploymentProperty {
#   id: UUID! @unique
#   category: String
#   deployment: Deployment
#   key: String!
#   value: String
# }

# type SystemSetting @pgTable(name: "system_settings") {
#   id: ID! @unique @pgColumn(name: "key")
#   key: String
#   value: String
#   category: String
#   isEncrypted: Boolean @pgColumn(name: "is_encrypted")
#   createdAt: DateTime! @pgColumn(name: "created_at")
#   updatedAt: DateTime! @pgColumn(name: "updated_at")
# }
